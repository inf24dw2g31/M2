# docker-compose.prod.yml
version: '3.8'

services:
  database:
    image: rewindj/comercio-db-m1:v1
    container_name: database
    environment:
      MYSQL_ROOT_PASSWORD: 12345678
      MYSQL_DATABASE: comerciodev
      MYSQL_USER: dev_user
      MYSQL_PASSWORD: dev_password
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - comercio-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "prod_user", "-pprod_password"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: always

  nodejs:
    image: rewindj/comercio-nodejs-m1:v1
    container_name: comercio-nodejs
    environment:
      DATABASE_HOST: database
      DATABASE_PORT: 3306
      DATABASE_NAME: comerciodev
      DATABASE_USER: dev_user
      DATABASE_PASSWORD: dev_password
      # Valores do Google OAuth e JWT diretos do .env
      GOOGLE_CLIENT_ID: 
      GOOGLE_CLIENT_SECRET: 
      JWT_SECRET: my_new_jwt_secret_key
      SESSION_SECRET: your_session_secret
    ports:
      - "3000:3000"
    networks:
      - comercio-network
    depends_on:
      database:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Aguardando banco de dados inicializar completamente...'
        for i in {1..30}; do
          if mysql -h database -u prod_user -pprod_password -e 'SELECT 1' COMERCIOPROD > /dev/null 2>&1; then
            echo 'Database está pronto para conexões!'
            break
          fi
          echo 'Tentativa $$i: Database ainda não está pronto... aguardando 5 segundos'
          sleep 5
        done
        echo 'Iniciando aplicação Node.js...'
        npm start
      "
    restart: always

networks:
  comercio-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
