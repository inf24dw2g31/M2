openapi: 3.0.0
info:
  title: API de Gestão de Comercio
  description: "API para gestão de utilizadores, administradores, produtos, pedidos,\
    \ itens e pagamentos."
  version: 1.0.0
servers:
- url: http://localhost:3000/api
tags:
  - name: Utilizadores
    description: Operações relacionadas com utilizadores
  - name: Administradores
    description: Operações relacionadas com administradores
  - name: Categorias
    description: Operações relacionadas com categorias de produtos
  - name: Produtos
    description: Operações relacionadas com produtos
  - name: Pedidos
    description: Operações relacionadas com pedidos
paths:
  #---------------------------------------
  # UTILIZADORES
  #---------------------------------------
  /utilizadores:
    get:
      tags:
        - Utilizadores
      summary: Listar todos os utilizadores
      operationId: listarUtilizadores
      responses:
        "200":
          description: Lista de utilizadores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Utilizador"
                x-content-type: application/json
      x-swagger-router-controller: Default
    post:
      tags:
        - Utilizadores
      summary: Criar um novo utilizador
      operationId: criarUtilizador
      requestBody:
        description: Utilizador a ser criado
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Utilizador"
        required: true
      responses:
        "201":
          description: Utilizador criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utilizador"
      x-swagger-router-controller: Default
  
  /utilizadores/{id}:
    get:
      tags:
        - Utilizadores
      summary: Obter um utilizador por ID
      operationId: obterUtilizador
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Utilizador encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utilizador"
        "404":
          description: Utilizador não encontrado
      x-swagger-router-controller: Default
    put:
      tags:
        - Utilizadores
      summary: Atualizar um utilizador
      operationId: atualizarUtilizador
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: Dados do utilizador para atualização
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Utilizador"
        required: true
      responses:
        "200":
          description: Utilizador atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utilizador"
        "404":
          description: Utilizador não encontrado
      x-swagger-router-controller: Default
    delete:
      tags:
        - Utilizadores
      summary: Apagar um utilizador
      operationId: apagarUtilizador
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: Utilizador apagado com sucesso
        "404":
          description: Utilizador não encontrado
      x-swagger-router-controller: Default

  #---------------------------------------
  # ADMINISTRADORES
  #---------------------------------------
  /administradores:
    get:
      tags:
        - Administradores
      summary: Listar todos os administradores
      operationId: listarAdministradores
      responses:
        "200":
          description: Lista de administradores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Administrador"
                x-content-type: application/json
      x-swagger-router-controller: Default
    post:
      tags:
        - Administradores
      summary: Criar um novo administrador
      operationId: criarAdministrador
      security:
        - bearerAuth: []
      requestBody:
        description: Administrador a ser criado
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Administrador"
        required: true
      responses:
        "201":
          description: Administrador criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Administrador"
      x-swagger-router-controller: Default
  
  /administradores/{id}:
    get:
      tags:
        - Administradores
      summary: Obter um administrador por ID
      operationId: obterAdministrador
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Administrador encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Administrador"
        "404":
          description: Administrador não encontrado
      x-swagger-router-controller: Default
    put:
      tags:
        - Administradores
      summary: Atualizar um administrador
      operationId: atualizarAdministrador
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: Dados do administrador para atualização
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Administrador"
        required: true
      responses:
        "200":
          description: Administrador atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Administrador"
        "404":
          description: Administrador não encontrado
      x-swagger-router-controller: Default
    delete:
      tags:
        - Administradores
      summary: Apagar um administrador
      operationId: apagarAdministrador
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: Administrador apagado com sucesso
        "404":
          description: Administrador não encontrado
      x-swagger-router-controller: Default

  #---------------------------------------
  # CATEGORIAS
  #---------------------------------------
  /categorias:
    get:
      tags:
        - Categorias
      summary: Listar todas as categorias
      operationId: listarCategorias
      responses:
        "200":
          description: Lista de categorias
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Categoria"
                x-content-type: application/json
      x-swagger-router-controller: Default
    post:
      tags:
        - Categorias
      summary: Criar uma nova categoria
      operationId: criarCategoria
      security:
        - bearerAuth: []
      requestBody:
        description: Categoria a ser criada
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Categoria"
        required: true
      responses:
        "201":
          description: Categoria criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categoria"
      x-swagger-router-controller: Default
  
  /categorias/{id}:
    get:
      tags:
        - Categorias
      summary: Obter uma categoria por ID
      operationId: obterCategoria
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Categoria encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categoria"
        "404":
          description: Categoria não encontrada
      x-swagger-router-controller: Default
    put:
      tags:
        - Categorias
      summary: Atualizar uma categoria
      operationId: atualizarCategoria
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: Dados da categoria para atualização
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Categoria"
        required: true
      responses:
        "200":
          description: Categoria atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categoria"
        "404":
          description: Categoria não encontrada
      x-swagger-router-controller: Default
    delete:
      tags:
        - Categorias
      summary: Apagar uma categoria
      operationId: apagarCategoria
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: Categoria apagada com sucesso
        "404":
          description: Categoria não encontrada
      x-swagger-router-controller: Default

  #---------------------------------------
  # PRODUTOS
  #---------------------------------------
  /produtos:
    get:
      tags:
        - Produtos
      summary: Listar todos os produtos
      operationId: listarProdutos
      responses:
        "200":
          description: Lista de produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Produto"
                x-content-type: application/json
      x-swagger-router-controller: Default
    post:
      tags:
        - Produtos
      summary: Criar um novo produto
      operationId: criarProduto
      security:
        - bearerAuth: []
      requestBody:
        description: Produto a ser criado
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Produto"
        required: true
      responses:
        "201":
          description: Produto criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Produto"
      x-swagger-router-controller: Default
  
  /produtos/{id}:
    get:
      tags:
        - Produtos
      summary: Obter um produto por ID
      operationId: obterProduto
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Produto encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Produto"
        "404":
          description: Produto não encontrado
      x-swagger-router-controller: Default
    put:
      tags:
        - Produtos
      summary: Atualizar um produto
      operationId: atualizarProduto
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: Dados do produto para atualização
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Produto"
        required: true
      responses:
        "200":
          description: Produto atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Produto"
        "404":
          description: Produto não encontrado
      x-swagger-router-controller: Default
    delete:
      tags:
        - Produtos
      summary: Apagar um produto
      operationId: apagarProduto
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: Produto apagado com sucesso
        "404":
          description: Produto não encontrado
      x-swagger-router-controller: Default

  #---------------------------------------
  # PEDIDOS
  #---------------------------------------
  /pedidos:
    get:
      tags:
        - Pedidos
      summary: Listar todos os pedidos
      operationId: listarPedidos
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Lista de pedidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pedido"
                x-content-type: application/json
      x-swagger-router-controller: Default
    post:
      tags:
        - Pedidos
      summary: Criar um novo pedido
      operationId: criarPedido
      security:
        - bearerAuth: []
      requestBody:
        description: Pedido a ser criado
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pedido"
        required: true
      responses:
        "201":
          description: Pedido criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pedido"
      x-swagger-router-controller: Default
  
  /pedidos/{id}:
    get:
      tags:
        - Pedidos
      summary: Obter um pedido por ID
      operationId: obterPedido
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Pedido encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pedido"
        "404":
          description: Pedido não encontrado
      x-swagger-router-controller: Default
    put:
      tags:
        - Pedidos
      summary: Atualizar um pedido
      operationId: atualizarPedido
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: Dados do pedido para atualização
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pedido"
        required: true
      responses:
        "200":
          description: Pedido atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pedido"
        "404":
          description: Pedido não encontrado
      x-swagger-router-controller: Default
    delete:
      tags:
        - Pedidos
      summary: Apagar um pedido
      operationId: apagarPedido
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: Pedido apagado com sucesso
        "404":
          description: Pedido não encontrado
      x-swagger-router-controller: Default

#---------------------------------------
# SCHEMAS/MODELOS
#---------------------------------------
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Utilize o token JWT obtido na autenticação"
  
  schemas:  
    # Esquemas existentes
    Utilizador:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        email:
          type: string
        senha:
          type: string
        endereco:
          type: string
        telefone:
          type: string
        tipo_utilizador:
          type: string
          enum:
          - cliente
          - admin
      example:
        senha: senha
        telefone: telefone
        endereco: endereco
        tipo_utilizador: cliente
        nome: nome
        id: 0
        email: email
    
    Administrador:
      type: object
      properties:
        id:
          type: integer
        id_utilizador:
          type: integer
        api_key:
          type: string
      example:
        api_key: api_key
        id: 0
        id_utilizador: 6
    
    Categoria:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
      example:
        nome: nome
        id: 0
    
    Produto:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        descricao:
          type: string
        preco:
          type: number
          format: float
        stock:
          type: integer
        categoria_id:
          type: integer
      example:
        preco: 6.0274563
        nome: nome
        id: 0
        categoria_id: 5
        stock: 1
        descricao: descricao
    
    Pedido:
      type: object
      properties:
        id:
          type: integer
        id_utilizador:
          type: integer
        data_pedido:
          type: string
          format: date-time
        estado_pagamento:
          type: string
      example:
        data_pedido: 2000-01-23T04:56:07.000+00:00
        estado_pagamento: estado_pagamento
        id: 0
        id_utilizador: 6
    
    Pagamento:
      type: object
      properties:
        id:
          type: integer
        id_pedido:
          type: integer
        valor:
          type: number
          format: float
        estado_pagamento:
          type: string
        metodo_pagamento:
          type: string